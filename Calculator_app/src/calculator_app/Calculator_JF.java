/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import java.text.DecimalFormat;
/**
 *
 * @author Junior
 */
public class Calculator_JF extends javax.swing.JFrame {
    DecimalFormat df = new DecimalFormat("#.###");
    DecimalFormat df2 = new DecimalFormat("###,###");
    private boolean permiteVirg=true;
    private String valor1;
    private String valor2;
    private double resultDouble;
    private final int inverseNumber=-1;
    /**
     * Creates new form Calculator_JF
     */
    public Calculator_JF() {
        super("CALCULADORA");
        initComponents();
        jShowField.setText("0");
        jShowResult.setEditable(false);
        jShowAccounts.setEditable(false);
        jShowOperation.setEditable(false);
        jShowField.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jShowField = new javax.swing.JTextField();
        jButtonC = new javax.swing.JButton();
        jButtonAC = new javax.swing.JButton();
        jButtonMaisMenos = new javax.swing.JButton();
        jButtonMenos = new javax.swing.JButton();
        jButtonMais = new javax.swing.JButton();
        jButtonMulti = new javax.swing.JButton();
        jButtonIgual = new javax.swing.JButton();
        jButtonDiv = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jShowAccounts = new javax.swing.JTextField();
        jShowOperation = new javax.swing.JTextField();
        jShowResult = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        jButton4.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jShowField.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N

        jButtonC.setBackground(new java.awt.Color(153, 255, 153));
        jButtonC.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButtonC.setText("C");
        jButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCActionPerformed(evt);
            }
        });

        jButtonAC.setBackground(new java.awt.Color(153, 255, 153));
        jButtonAC.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButtonAC.setText("AC");
        jButtonAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonACActionPerformed(evt);
            }
        });

        jButtonMaisMenos.setBackground(new java.awt.Color(153, 255, 153));
        jButtonMaisMenos.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButtonMaisMenos.setText("+/-");
        jButtonMaisMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMaisMenosActionPerformed(evt);
            }
        });

        jButtonMenos.setBackground(new java.awt.Color(51, 255, 153));
        jButtonMenos.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jButtonMenos.setText("-");
        jButtonMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMenosActionPerformed(evt);
            }
        });

        jButtonMais.setBackground(new java.awt.Color(0, 255, 153));
        jButtonMais.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jButtonMais.setText("+");
        jButtonMais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMaisActionPerformed(evt);
            }
        });

        jButtonMulti.setBackground(new java.awt.Color(153, 255, 153));
        jButtonMulti.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jButtonMulti.setText("x");
        jButtonMulti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiActionPerformed(evt);
            }
        });

        jButtonIgual.setBackground(new java.awt.Color(0, 204, 153));
        jButtonIgual.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jButtonIgual.setText("=");
        jButtonIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIgualActionPerformed(evt);
            }
        });

        jButtonDiv.setBackground(new java.awt.Color(102, 255, 153));
        jButtonDiv.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jButtonDiv.setText("/");
        jButtonDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivActionPerformed(evt);
            }
        });

        jButton24.setBackground(new java.awt.Color(102, 255, 102));
        jButton24.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton24.setText("7");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setBackground(new java.awt.Color(102, 255, 102));
        jButton25.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton25.setText("8");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton26.setBackground(new java.awt.Color(102, 255, 102));
        jButton26.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton26.setText("9");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });

        jButton27.setBackground(new java.awt.Color(51, 255, 51));
        jButton27.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton27.setText("4");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jButton28.setBackground(new java.awt.Color(51, 255, 51));
        jButton28.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton28.setText("5");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });

        jButton29.setBackground(new java.awt.Color(51, 255, 102));
        jButton29.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton29.setText("6");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 255, 0));
        jButton1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 255, 51));
        jButton2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 255, 102));
        jButton3.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton0.setBackground(new java.awt.Color(0, 204, 51));
        jButton0.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });

        jButton34.setBackground(new java.awt.Color(0, 204, 102));
        jButton34.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jButton34.setText(",");
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34ActionPerformed(evt);
            }
        });

        jShowAccounts.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N

        jShowOperation.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jShowOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowOperationActionPerformed(evt);
            }
        });

        jShowResult.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jShowResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowResultActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel2.setText("=");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jShowAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jShowResult))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jShowField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jButtonC, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                            .addComponent(jButton24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(jButtonAC, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jButton25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(6, 6, 6)))))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonMaisMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonIgual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMenos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDiv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMulti, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonMais, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jShowOperation)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jShowAccounts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jShowResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jShowField)
                    .addComponent(jShowOperation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonAC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButtonC, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonMaisMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton26, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonMulti, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonMais, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton0, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setBackground(new java.awt.Color(153, 204, 255));
        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setText("CALCULADORA");

        jLabel3.setFont(new java.awt.Font("Constantia", 3, 10)); // NOI18N
        jLabel3.setText("by: r0bertwell");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(46, 46, 46))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jLabel3))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
                jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"1");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
             if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
             jShowField.setText(jShowField.getText()+"2");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"3");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"4");
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"5");
        }
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
       
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"6");
        }
    }//GEN-LAST:event_jButton29ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"7");
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"8");
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>7){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"9");
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCActionPerformed
        // TODO add your handling code here:
        jShowField.setText("0");
        this.permiteVirg=true;
    }//GEN-LAST:event_jButtonCActionPerformed

    private void jButtonMaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMaisActionPerformed
        // TODO add your handling code here:
        if("ERR".equals(jShowResult.getText())){
            
        } else {
           if(null != jShowOperation.getText())switch (jShowOperation.getText()) {
                case "x":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("+");
                    } else {
                        if("".equals(jShowField.getText())){
                            valor1=jShowResult.getText();
                            jShowAccounts.setText(jShowResult.getText()+"+");
                            jShowOperation.setText("+");
                        } else {
                            resultDouble = Double.valueOf(jShowResult.getText())*Double.valueOf(jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"+");
                            jShowOperation.setText("+");
                            jShowField.setText(null);
                        }
                    }   break;
                case "-":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("+");
                    } else {
                        if("".equals(jShowField.getText())){
                            valor1=jShowResult.getText();
                            jShowAccounts.setText(jShowResult.getText()+"+");
                            jShowOperation.setText("+");
                        } else {
                            resultDouble = Double.valueOf(jShowResult.getText())-Double.valueOf(jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"+");
                            jShowOperation.setText("+");
                            jShowField.setText(null);
                        }
                    }    break;
                case "/":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("+");
                    } else {
                        if("".equals(jShowField.getText())){
                            valor1=jShowResult.getText();
                            jShowAccounts.setText(jShowResult.getText()+"+");
                            jShowOperation.setText("+");
                        } else {
                            resultDouble = Double.valueOf(jShowResult.getText())/Double.valueOf(jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"+");
                            jShowOperation.setText("+");
                            jShowField.setText(null);
                        }
                    }   break;
                default:
                    break;
            }
        if("0".equals(jShowField.getText())){
            if(jShowResult.getText().length()==0){
                jShowResult.setText(null);
                jShowOperation.setText("+");
                valor1=jShowField.getText();
                jShowAccounts.setText(jShowAccounts.getText()+valor1+"+");
                jShowField.setText(null);
            } else {
            valor1=jShowField.getText();
            jShowField.setText(null);
            jShowOperation.setText("+");
            jShowAccounts.setText(jShowAccounts.getText()+valor1+"+");
            resultDouble = Double.valueOf(jShowResult.getText())+Double.valueOf(valor1);
            jShowResult.setText(df.format(resultDouble).replace(',','.'));
            }
        } else {
            if(jShowResult.getText().length()==0){
                if("".equals(jShowField.getText())){
                    jShowOperation.setText("+");
                } else {
                    jShowResult.setText("0");
                    jShowOperation.setText("+");
                    valor1=jShowField.getText();
                    valor2=jShowResult.getText();
                    resultDouble = Double.valueOf(valor1)+Double.valueOf(valor2);
                    jShowResult.setText(df.format(resultDouble).replace(',','.'));
                    jShowAccounts.setText(jShowAccounts.getText()+valor1+"+");
                    jShowField.setText(null);
                }
            } else {
                if("".equals(jShowField.getText())){
                    if("".equals(jShowOperation.getText())){
                        jShowOperation.setText("+");
                        jShowAccounts.setText(jShowResult.getText()+"+");
                    } else {
                        if("".equals(jShowField.getText())){
                            valor1=jShowResult.getText();
                        } else {
                            jShowField.setText("0");
                            jShowOperation.setText("+");
                            valor1=jShowField.getText();
                            valor2=jShowResult.getText();
                            resultDouble = Double.valueOf(valor1)+Double.valueOf(valor2);
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            jShowAccounts.setText(jShowAccounts.getText()+"");
                            jShowField.setText(null);
                        }
                    }
                } else {
                    valor1=jShowField.getText();
                    valor2=jShowResult.getText();
                    resultDouble = Double.valueOf(valor1)+Double.valueOf(valor2);
                    jShowResult.setText(df.format(resultDouble).replace(',','.'));
                    jShowAccounts.setText(jShowAccounts.getText()+valor1+"+");
                    jShowField.setText(null);
                    jShowOperation.setText("+");
                }
            }
        }
    }
        if("".equals(jShowField.getText())||"0".equals(jShowField.getText())){
            
        } else {
        String testaVirg;
        testaVirg = jShowResult.getText();
        char[] tested = testaVirg.toCharArray();
                for(int i=0; i<tested.length; i++){
                    if(tested[i]=='0'&&tested[i+1]=='.'){
                        break;
                    } else {
                        if(tested[i]=='.'){
                            if(tested[i+1]=='0'){
                                String receber = df2.format(resultDouble);
                                jShowResult.setText(receber);
                                break;
                            } else {
                                jShowResult.setText(testaVirg);
                            }
                        }
                    }
                }
        }
        if(jShowResult.getText().length()>8){
        }
        if("-0".equals(jShowResult.getText())){
            jShowResult.setText("0");
        }
        this.permiteVirg=true;
    }//GEN-LAST:event_jButtonMaisActionPerformed

    private void jButtonIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIgualActionPerformed
        // TODO add your handling code here:
        if((!"".equals(jShowField.getText()))&&("".equals(jShowAccounts.getText()))&&("".equals(jShowResult.getText()))){
            jShowResult.setText(jShowField.getText());
            jShowAccounts.setText(jShowResult.getText());
            jShowField.setText(null);
        }
        if((jShowOperation.getText().length()==1)&&(jShowAccounts.getText().length()>0)&&(jShowResult.getText().length()==0)){
            
        } else {
        if("ERR".equals(jShowResult.getText())){
            
            } else {
                if(null != jShowOperation.getText())switch (jShowOperation.getText()) {
                case "+":
                    if("".equals(jShowAccounts.getText())){
                        jShowOperation.setText(null);
                        jShowAccounts.setText("0");
                        jShowResult.setText("0");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(valor1+"+"+jShowResult.getText());
                            resultDouble=(Double.valueOf(valor1))+(Double.valueOf(jShowResult.getText()));
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                        } else {
                            resultDouble=(Double.valueOf(jShowResult.getText()))+(Double.valueOf(jShowField.getText()));
                            jShowAccounts.setText(jShowAccounts.getText()+jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            jShowField.setText(null);
                            jShowOperation.setText(null);
                        }
                    }
                    break;
                case "-":
                    if("".equals(jShowAccounts.getText())){
                        jShowOperation.setText(null);
                        jShowAccounts.setText("0");
                        jShowResult.setText("0");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(jShowResult.getText()+"-"+valor1);
                            resultDouble=(Double.valueOf(jShowResult.getText()))-(Double.valueOf(valor1));
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                        } else {
                            resultDouble=(Double.valueOf(jShowResult.getText()))-(Double.valueOf(jShowField.getText()));
                            jShowAccounts.setText(jShowAccounts.getText()+jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            jShowField.setText(null);
                            jShowOperation.setText(null);
                        }
                    }
                    break;
                case "x":
                    if("".equals(jShowAccounts.getText())){
                        jShowOperation.setText(null);
                        jShowAccounts.setText("0");
                        jShowResult.setText("0");
                    } else {
                        if(!"".equals(jShowField.getText())){
                            resultDouble=(Double.valueOf(valor1))*(Double.valueOf(jShowField.getText()));
                            jShowAccounts.setText(jShowAccounts.getText()+jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            jShowField.setText(null);
                            jShowOperation.setText(null);
                        } else if("".equals(jShowField.getText())){
                            jShowAccounts.setText(valor1+"*"+jShowResult.getText());
                            resultDouble=(Double.valueOf(valor1))*(Double.valueOf(jShowResult.getText()));
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                        }
                    }
                    break;
                case "/":
                    if("".equals(jShowAccounts.getText())){
                        jShowOperation.setText(null);
                        jShowAccounts.setText("0");
                        jShowResult.setText("0");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(valor1+"/"+jShowResult.getText());
                            resultDouble=Double.valueOf(jShowResult.getText())/Double.valueOf(valor1);
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            if(jShowResult.getText().length()>8){
                                jShowResult.setText("ERR");
                            }
                        } else { 
                            if("0".equals(jShowField.getText())){
                                jShowResult.setText("ERR");
                                jShowAccounts.setText(jShowAccounts.getText()+jShowField.getText());
                                jShowField.setText(null);
                                jShowOperation.setText(null);
                            } else {
                                resultDouble=Double.valueOf(jShowResult.getText())/Double.valueOf(jShowField.getText());
                                jShowAccounts.setText(jShowAccounts.getText()+jShowField.getText());
                                jShowResult.setText(df.format(resultDouble).replace(',','.'));
                                jShowField.setText(null);
                                jShowOperation.setText(null);
                            }
                        }
                    }
                    break;
                default:
                    break;
            } 
            }
        }
        if(jShowResult.getText().length()>8){
            jShowResult.setText("ERR");
        }
    }//GEN-LAST:event_jButtonIgualActionPerformed

    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
        // TODO add your handling code here:
        if(jShowField.getText().length()>8){
            
        } else {
            if((!"".equals(jShowAccounts.getText()))&&(!"".equals(jShowResult.getText()))&&(jShowOperation.getText().length()<1)){
                jShowField.setText(null);
                jShowAccounts.setText(null);
                jShowOperation.setText(null);
                jShowResult.setText(null);
            }
            if("0".equals(jShowField.getText())){
            jShowField.setText(null);
            }
            jShowField.setText(jShowField.getText()+"0");
        }
        
    }//GEN-LAST:event_jButton0ActionPerformed

    private void jButtonACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonACActionPerformed
        // TODO add your handling code here:
        jShowField.setText(null);
        jShowAccounts.setText(null);
        jShowOperation.setText(null);
        jShowResult.setText(null);
        valor1=null;
        valor2=null;
        this.permiteVirg=true;
    }//GEN-LAST:event_jButtonACActionPerformed
    private void jShowResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jShowResultActionPerformed

    private void jShowOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowOperationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jShowOperationActionPerformed

    private void jButtonMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMenosActionPerformed
        // TODO add your handling code here:
        if("ERR".equals(jShowResult.getText())){
            
        } else {
        if( null != jShowOperation.getText())switch (jShowOperation.getText()) {
                case "x":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("-");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(jShowResult.getText()+"-");
                            jShowOperation.setText("-");
                        } else {
                            resultDouble = Double.valueOf(jShowResult.getText())*Double.valueOf(jShowField.getText());
                            String passar = Double.toString(resultDouble);
                            char[] passado = passar.toCharArray();
                            for(int i=0; i<passado.length; i++){
                                if(passado[i]=='.'){
                                    if(passado[i+1]=='0'){
                                        String receber = df2.format(resultDouble);
                                        jShowResult.setText(receber);
                                        break;
                                    } else {
                                        jShowResult.setText(Double.toString(resultDouble).replace(',','.'));
                                    }
                                }
                            }
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                            jShowOperation.setText("-");
                            jShowField.setText(null);
                        }
                    }       break;
                case "+":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("-");
                    } else {
                        if("".equals(jShowField.getText())){
                            valor1=jShowResult.getText();
                            jShowAccounts.setText(jShowResult.getText()+"-");
                            jShowOperation.setText("-");
                        } else {
                            resultDouble = Double.valueOf(jShowResult.getText())+Double.valueOf(jShowField.getText());
                            String passar = Double.toString(resultDouble);
                            char[] passado = passar.toCharArray();
                            for(int i=0; i<passado.length; i++){
                                if(passado[i]=='.'){
                                    if(passado[i+1]=='0'){
                                        String receber = df2.format(resultDouble);
                                        jShowResult.setText(receber);
                                        break;
                                    } else {
                                        jShowResult.setText(Double.toString(resultDouble).replace(',','.'));
                                    }
                                }
                            }
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                            jShowOperation.setText("-");
                            jShowField.setText(null);
                        }
                    }   break;
                case "/":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("-");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(jShowResult.getText()+"-");
                            jShowOperation.setText("-");
                        } else {
                            resultDouble = Double.valueOf(jShowResult.getText())/Double.valueOf(jShowField.getText());
                            String passar = Double.toString(resultDouble);
                            char[] passado = passar.toCharArray();
                            for(int i=0; i<passado.length; i++){
                                if(passado[i]=='.'){
                                    if(passado[i+1]=='0'){
                                        String receber = df2.format(resultDouble);
                                        jShowResult.setText(receber);
                                        break;
                                    } else {
                                        jShowResult.setText(Double.toString(resultDouble).replace(',','.'));
                                    }
                                }
                            }
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                            jShowOperation.setText("-");
                            jShowField.setText(null);
                        }
                    }   break;
                default:
                    break;
            }
        if("0".equals(jShowField.getText())){
            if(jShowResult.getText().length()==0){
                valor1=jShowField.getText();
                jShowResult.setText(valor1);
                jShowOperation.setText("-");
                jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                jShowField.setText(null);
            } else {
                valor1=jShowField.getText();
                jShowField.setText(null);
                jShowOperation.setText("-");
                jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                resultDouble=Double.parseDouble(jShowResult.getText())-Double.parseDouble(valor1);
                jShowResult.setText(df.format(resultDouble).replace(',','.'));
            }
        } else {
            if(jShowResult.getText().length()==0){
                if("".equals(jShowField.getText())){
                    jShowOperation.setText("-");
                } else {
                    jShowOperation.setText("-");
                    valor1=jShowField.getText();
                    resultDouble=Double.valueOf(valor1);
                    jShowResult.setText(df.format(resultDouble).replace(',','.'));
                    jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                    jShowField.setText(null);
                }
            } else {
                if(("".equals(jShowField.getText()))&&("-".equals(jShowOperation.getText()))&&(!"".equals(jShowAccounts.getText()))){
                
                }else {
                    if("".equals(jShowField.getText())){
                        if(jShowOperation.getText().length()==0){
                            jShowOperation.setText("-");
                            jShowAccounts.setText(jShowResult.getText()+"-");
                        } else {
                            jShowField.setText("0");
                            jShowOperation.setText("-");
                            valor1=jShowField.getText();
                            valor2=jShowResult.getText();
                            //resultFloat=Float.parseFloat(valor1)-Float.parseFloat(valor2);
                            resultDouble=Double.valueOf(valor1)-Double.valueOf(valor2);
                            jShowResult.setText(df.format(resultDouble).replace(',','.'));
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                            jShowField.setText(null);
                        }
                    } else {
                    valor1=jShowField.getText();
                    valor2=jShowResult.getText();
                    resultDouble=Double.valueOf(valor2)-Double.valueOf(valor1);
                    jShowResult.setText(df.format(resultDouble).replace(',','.'));
                    jShowAccounts.setText(jShowAccounts.getText()+valor1+"-");
                    jShowField.setText(null);
                    }
                }
            }
        }
        }
        if("".equals(jShowField.getText())||"0".equals(jShowField.getText())){
            
        } else {
        String testaVirg;
        testaVirg = jShowResult.getText();
        char[] tested = testaVirg.toCharArray();
                for(int i=0; i<tested.length; i++){
                    if(tested[i]=='0'&&tested[i+1]=='.'){
                        break;
                    } else {
                        if(tested[i]=='.'){
                            if(tested[i+1]=='0'){
                                String receber = df2.format(resultDouble);
                                jShowResult.setText(receber);
                                break;
                            } else {
                                jShowResult.setText(testaVirg);
                            }
                        }
                    }
                }
        }
        if(jShowResult.getText().length()>8){
            jShowResult.setText("ERR");
        }
        if("-0".equals(jShowResult.getText())){
            jShowResult.setText("0");
        }
        this.permiteVirg=true;
    }//GEN-LAST:event_jButtonMenosActionPerformed

    private void jButtonMaisMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMaisMenosActionPerformed
        // TODO add your handling code here:
        if("ERR".equals(jShowResult.getText())){
            
        } else {
            if(null == jShowField.getText()){
                boolean eVirg=false;
                String testaVirg;
                testaVirg = jShowField.getText();
                char[] tested = testaVirg.toCharArray();
                for(int i=0; i<tested.length; i++){
                    if(tested[i]=='.'){
                        String pegaValorResult = jShowField.getText();
                        float numeroInverter = Float.parseFloat(pegaValorResult)*inverseNumber;
                        jShowField.setText(Float.toString(numeroInverter).replace(',','.'));
                        eVirg=true;
                        break;
                    } else {
                        eVirg=false;
                    }
                }
                if(eVirg==false){
                    String pegaValorResult = jShowField.getText();
                    int numeroToInver = Integer.parseInt(pegaValorResult)*inverseNumber;
                    jShowField.setText(Integer.toString(numeroToInver));
                }
            } else switch (jShowField.getText()) {
                case "0":
                    break;
                case "":
                    if("".equals(jShowResult.getText())){
                        
                    } else {
                        boolean eVirg=false;
                        String testaVirg;
                        testaVirg = jShowResult.getText();
                        char[] tested = testaVirg.toCharArray();
                        for(int i=0; i<tested.length; i++){
                            if(tested[i]=='.'){
                                String pegaValorResult = jShowResult.getText();
                                float numeroInverter = Float.parseFloat(pegaValorResult)*inverseNumber;
                                jShowResult.setText(df.format(numeroInverter).replace(',','.'));
                                eVirg=true;
                                break;
                            } else {
                                eVirg=false;
                            }
                        }
                        if(eVirg==false){
                            String pegaValorResult = jShowResult.getText();
                            int numeroToInver = Integer.parseInt(pegaValorResult)*inverseNumber;
                            jShowResult.setText(Integer.toString(numeroToInver));
                        }
                    }   break;
                default:
                    boolean eVirg=false;
                    String testaVirg;
                    testaVirg = jShowField.getText();
                    char[] tested = testaVirg.toCharArray();
                    for(int i=0; i<tested.length; i++){
                        if(tested[i]=='.'){
                            String pegaValorResult = jShowField.getText();
                            float numeroInverter = Float.parseFloat(pegaValorResult)*inverseNumber;
                            jShowField.setText(Float.toString(numeroInverter).replace(',','.'));
                            eVirg=true;
                            break;
                        } else {
                            eVirg=false;
                        }
                    }
                    if(eVirg==false){
                        String pegaValorResult = jShowField.getText();
                        int numeroToInver = Integer.parseInt(pegaValorResult)*inverseNumber;
                        jShowField.setText(Integer.toString(numeroToInver));
                    }
                    break;
            }
        }
    }//GEN-LAST:event_jButtonMaisMenosActionPerformed

    private void jButtonMultiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiActionPerformed
        // TODO add your handling code here:
        if("ERR".equals(jShowResult.getText())){
            
        } else {
        if( null != jShowOperation.getText())switch (jShowOperation.getText()) {
                case "+":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("x");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(jShowResult.getText()+"x");
                            jShowOperation.setText("x");
                        } else {
                            resultDouble=Double.valueOf(jShowResult.getText())+Double.valueOf(jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',', '.'));
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"x");
                            jShowOperation.setText("x");
                            jShowField.setText(null);
                        }
                    }       break;
                case "-":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("x");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(jShowResult.getText()+"x");
                            jShowOperation.setText("x");
                        } else {
                            resultDouble=Double.valueOf(jShowResult.getText())-Double.valueOf(jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',', '.'));
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"x");
                            jShowOperation.setText("x");
                            jShowField.setText(null); 
                        }
                    }break;
                case "/":
                    if(jShowAccounts.getText().length()==0){
                        jShowOperation.setText("x");
                    } else {
                        if("".equals(jShowField.getText())){
                            jShowAccounts.setText(jShowResult.getText()+"x");
                            jShowOperation.setText("x");
                        } else {
                            resultDouble=Double.valueOf(jShowResult.getText())/Double.valueOf(jShowField.getText());
                            jShowResult.setText(df.format(resultDouble).replace(',', '.'));
                            valor1=jShowField.getText();
                            jShowAccounts.setText(jShowAccounts.getText()+valor1+"x");
                            jShowOperation.setText("x");
                            jShowField.setText(null);
                        }
                    }
                    break;
                default:
                    break;
            }
        if("0".equals(jShowField.getText())){
            if(jShowResult.getText().length()==0){
                jShowResult.setText("0");
                jShowOperation.setText("x");
                valor1=jShowField.getText();
                jShowAccounts.setText(jShowAccounts.getText()+valor1+"x");
                jShowField.setText(null);
            } else {
            valor1=jShowField.getText();
            jShowField.setText(null);
            jShowOperation.setText("x");
            jShowAccounts.setText(jShowAccounts.getText()+valor1+"x");
            jShowResult.setText("0");
            }
        } else {
            if(jShowResult.getText().length()==0){
                if("".equals(jShowField.getText())){
                    jShowOperation.setText("x");
                } else {
                    jShowOperation.setText("x");
                    valor1=jShowField.getText();
                    resultDouble = Double.valueOf(valor1);
                    jShowResult.setText(df.format(resultDouble).replace(',','.'));
                    jShowAccounts.setText(jShowAccounts.getText()+valor1+"x");
                    jShowField.setText(null);
                }
            } else {
                if("".equals(jShowField.getText())){
                    if(jShowOperation.getText().length()==0){
                        jShowOperation.setText("x");
                        jShowAccounts.setText(jShowResult.getText()+"x");
                    }
                } else {
                    
                    valor1=jShowField.getText();
                    valor2=jShowResult.getText();
                    resultDouble=Double.valueOf(valor1)*Double.valueOf(valor2);
                    jShowResult.setText(df.format(resultDouble).replace(',','.'));
                    jShowAccounts.setText(jShowAccounts.getText()+valor1+"x");
                    jShowField.setText(null);
                }
            }
        }
        }
        if("".equals(jShowField.getText())||"0".equals(jShowField.getText())){
            
        } else {
        String testaVirg;
        int casaDecimal=0;
        testaVirg = jShowResult.getText();
        char[] tested = testaVirg.toCharArray();
                for (int j = 0; j < tested.length; j++) {
                    if(tested[j]=='.'){
                        if(tested[j+1]=='0'){
                            casaDecimal=0;
                            break;
                        }
                        casaDecimal=j;
                        break;
                    } else {
                        casaDecimal=0;
                    }
                }
                for(int i=0; i<tested.length; i++){
                    //try{   
                        if(casaDecimal>1){
                                String recebeFloat3 = df.format(Double.valueOf(jShowResult.getText())).replace(',','.');
                                jShowResult.setText(recebeFloat3);
                                break; 
                        } else if(casaDecimal==0){
                            jShowResult.setText(df2.format(resultDouble));
                            break;
                        } else {
                            if(tested[i]!=' '&&tested[i+1]=='.'){
                                jShowResult.setText(jShowResult.getText());
                                break;
                            } else {
                                if(tested[i]=='.'){
                                    if(tested[i+1]=='0'){
                                        String receber = df2.format(resultDouble).replace(',', '.');
                                        jShowResult.setText(receber);
                                        break;
                                    } else {
                                        Double resultFlotVirg = Double.valueOf(testaVirg);
                                        jShowResult.setText(df.format(resultFlotVirg).replace(',', '.'));
                                    }
                                }
                            }
                        }
                    //}catch(ArrayIndexOutOfBoundsException e){
                        
                    //}
                }
        }
        if(jShowResult.getText().length()>8){
            jShowResult.setText("ERR");
        }
        if("-0".equals(jShowResult.getText())){
            jShowResult.setText("0");
        }
        this.permiteVirg=true;
    }//GEN-LAST:event_jButtonMultiActionPerformed

    private void jButtonDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivActionPerformed
        // TODO add your handling code here:
        if("ERR".equals(jShowResult.getText())){
            
        } else {
    try{
        if(null != jShowOperation.getText())switch (jShowOperation.getText()) {
            case "+":
                if(jShowAccounts.getText().length()==0){
                    jShowOperation.setText("/");
                } else {
                    if("".equals(jShowField.getText())){
                        jShowAccounts.setText(jShowResult.getText()+"/");
                        jShowOperation.setText("/");
                    } else {
                        resultDouble = Double.valueOf(jShowResult.getText())+Double.valueOf(jShowField.getText());
                        jShowResult.setText(df.format(resultDouble).replace(',','.'));
                        valor1=jShowField.getText();
                        jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
                        jShowOperation.setText("/");
                        jShowField.setText(null);
                    }
                }   break;
            case "-":
                if(jShowAccounts.getText().length()==0){
                    jShowOperation.setText("/");
                } else {
                    if("".equals(jShowField.getText())){
                        jShowAccounts.setText(jShowResult.getText()+"/");
                        jShowOperation.setText("/");
                    } else {
                        resultDouble = Double.valueOf(jShowResult.getText())-Double.valueOf(jShowField.getText());
                        jShowResult.setText(df.format(resultDouble).replace(',','.'));
                        valor1=jShowField.getText();
                        jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
                        jShowOperation.setText("/");
                        jShowField.setText(null); 
                    }
                }
                break;
            case "x":
                if(jShowAccounts.getText().length()==0){
                    jShowOperation.setText("/");
                } else {
                    if("".equals(jShowField.getText())){
                        jShowAccounts.setText(jShowResult.getText()+"/");
                        jShowOperation.setText("/");
                    } else {
                        resultDouble = Double.valueOf(jShowResult.getText())*Double.valueOf(jShowField.getText());
                        jShowResult.setText(df.format(resultDouble).replace(',','.'));
                        valor1=jShowField.getText();
                        jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
                        jShowOperation.setText("/");
                        jShowField.setText(null);    
                    }
                }break;
            default:
                break;
        }
        if("0".equals(jShowField.getText())){
            if(jShowResult.getText().length()==0){
                jShowResult.setText("0");
                jShowOperation.setText("/");
                valor1=jShowField.getText();
                jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
                jShowField.setText(null);
            } else {
            valor1=jShowField.getText();
            jShowField.setText(null);
            jShowOperation.setText("/");
            jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
            jShowResult.setText("ERR");
            }
        } else {
            if(jShowResult.getText().length()==0){
                if(jShowField.getText().length()==0){
                    jShowOperation.setText("/");
                } else {
                jShowResult.setText("1");
                jShowOperation.setText("/");
                valor1=jShowField.getText();
                valor2=jShowResult.getText();
                jShowResult.setText(jShowField.getText());
                resultDouble = Double.valueOf(valor1)/Double.valueOf(valor2);
                jShowResult.setText(df.format(resultDouble).replace(',', '.'));
                jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
                jShowField.setText(null);
                }
            } else {
                if(!"".equals(jShowField.getText())){
                    if("0".equals(jShowResult.getText())){
                        jShowOperation.setText("/");
                        valor1=jShowField.getText();
                        valor2=jShowResult.getText();
                        jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
                        jShowResult.setText("0");
                        jShowField.setText(null);
                    } else {
                        if("".equals(jShowField.getText())){
                            if(jShowOperation.getText().length()==0){
                                jShowOperation.setText("/");
                                jShowAccounts.setText(jShowResult.getText()+"/");
                            }
                        } else {
                                valor1=jShowField.getText();
                                valor2=jShowResult.getText();
                                jShowAccounts.setText(jShowAccounts.getText()+valor1+"/");
                                resultDouble = Double.valueOf(valor2)/Double.valueOf(valor1);
                                jShowResult.setText(df.format(resultDouble).replace(',', '.'));
                                jShowField.setText(null);
                        }
                    }
                }
            }
        } 
        } catch (ArithmeticException | NumberFormatException e){
            jShowResult.setText("ERR");
        }
        }
        if(("".equals(jShowField.getText()))||("0".equals(jShowField.getText()))||("0".equals(jShowResult.getText()))||("".equals(jShowResult.getText()))){
            
        } else {
        String testaVirg;
        testaVirg = jShowResult.getText();
        char[] tested = testaVirg.toCharArray();
                for(int i=0; i<tested.length; i++){
                    if(tested[i]=='0'&&tested[i+1]=='.'){
                        break;
                    } else {
                        if(tested[i]=='.'){
                            if(tested[i+1]=='0'){
                                String receber = df2.format(resultDouble);
                                System.out.println(receber);
                                jShowResult.setText(receber);
                                break;
                            } else {
                                jShowResult.setText(testaVirg);
                            }
                        }
                    }
                }
        }
        if(jShowResult.getText().length()>8){
            jShowResult.setText("ERR");
        }
        if("-0".equals(jShowResult.getText())){
            jShowResult.setText("0");
        }
        this.permiteVirg=true;
    }//GEN-LAST:event_jButtonDivActionPerformed

    private void jButton34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34ActionPerformed
        // TODO add your handling code here:
        if(this.permiteVirg==true){
            if("".equals(jShowField.getText())){
                jShowField.setText("0.");
            } else {
                String pegaNumeroVirgula=jShowField.getText();
                jShowField.setText(pegaNumeroVirgula+".");
            }
            permiteVirg=false;
        }else {

        }
    }//GEN-LAST:event_jButton34ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator_JF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator_JF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator_JF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator_JF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Calculator_JF().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonAC;
    private javax.swing.JButton jButtonC;
    private javax.swing.JButton jButtonDiv;
    private javax.swing.JButton jButtonIgual;
    private javax.swing.JButton jButtonMais;
    private javax.swing.JButton jButtonMaisMenos;
    private javax.swing.JButton jButtonMenos;
    private javax.swing.JButton jButtonMulti;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jShowAccounts;
    private javax.swing.JTextField jShowField;
    private javax.swing.JTextField jShowOperation;
    private javax.swing.JTextField jShowResult;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
